package BitManipulation;

public class MaximumANDValue {
	/*
	 * Given an array arr[] of N positive elements. The task is to find the Maximum
	 * AND Value generated by any pair of element from the array. Note: AND is
	 * bitwise '&' operator.
	 * 
	 * 
	 * Example 1:
	 * 
	 * Input: N = 4 arr[] = {4, 8, 12, 16} Output: 8 Explanation: Pair (8,12) has
	 * the Maximum AND Value 8.
	 */
	public static int maxAND(int arr[], int n) {
		int res = 0;
		// iterate over total of 30bits
		// from msb to lsb
		for (int bit = 31; bit >= 0; bit--) {
			// find the count of element
			// having set msb
			int count = checkBit(res | (1 << bit), arr, n);

			// if count >= 2 set particular
			// bit in result
			if (count >= 2)
				res |= (1 << bit);
		}

		return res;
	}

	static int checkBit(int pattern, int arr[], int n) {
		int count = 0;
		for (int i = 0; i < n; i++)
			if ((pattern & arr[i]) == pattern)
				count++;
		return count;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
